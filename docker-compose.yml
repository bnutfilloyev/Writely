version: '3.8'

services:
  # postgres:
  #   image: postgres:15-alpine
  #   container_name: ielts-postgres
  #   restart: unless-stopped
  #   environment:
  #     POSTGRES_DB: ielts_bot
  #     POSTGRES_USER: ielts_user
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  #     POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   ports:
  #     - "5432:5432"
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U ielts_user -d ielts_bot"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5
  #   logging:
  #     driver: "json-file"
  #     options:
  #       max-size: "10m"
  #       max-file: "3"

  ielts-bot:
    build: .
    container_name: ielts-telegram-bot
    restart: unless-stopped
    # depends_on:
    #   postgres:
    #     condition: service_healthy
    environment:
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - ADMIN_ID=${ADMIN_ID}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_MODEL=${OPENAI_MODEL:-meta-llama/llama-3.1-8b-instruct:free}
      - OPENROUTER_BASE_URL=${OPENROUTER_BASE_URL:-https://openrouter.ai/api/v1}
      - OPENROUTER_SITE_URL=${OPENROUTER_SITE_URL:-https://ielts-telegram-bot.local}
      - OPENROUTER_SITE_NAME=${OPENROUTER_SITE_NAME:-IELTS Writing Bot}
      - DATABASE_URL=postgresql+asyncpg://ielts_user:${POSTGRES_PASSWORD}@postgres:5432/ielts_bot
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=ielts_bot
      - POSTGRES_USER=ielts_user
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - DB_POOL_SIZE=${DB_POOL_SIZE:-10}
      - DB_MAX_OVERFLOW=${DB_MAX_OVERFLOW:-20}
      - DB_POOL_RECYCLE=${DB_POOL_RECYCLE:-3600}
      - DB_POOL_TIMEOUT=${DB_POOL_TIMEOUT:-30}
      - DEBUG=false
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - ENABLE_API=true
      - DAILY_SUBMISSION_LIMIT=${DAILY_SUBMISSION_LIMIT:-3}
      - PRO_DAILY_LIMIT=${PRO_DAILY_LIMIT:-50}
      - API_HOST=0.0.0.0
      - API_PORT=8080
    ports:
      - "8080:8080"
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8080/health', timeout=5)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  postgres_data: