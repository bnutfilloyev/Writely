# Monitoring Configuration for IELTS Telegram Bot
# This file defines monitoring, alerting, and health check configurations

version: '3.8'

services:
  # Main application (from docker-compose.yml)
  ielts-bot:
    # Monitoring labels for external tools
    labels:
      - "monitoring.enable=true"
      - "monitoring.service=ielts-telegram-bot"
      - "monitoring.environment=${ENVIRONMENT:-production}"
    
    # Enhanced health check configuration
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/health', timeout=5).raise_for_status()"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    
    # Logging configuration for monitoring
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
        labels: "service,environment"
    
    # Resource limits for monitoring
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  # Optional: Prometheus monitoring (uncomment if needed)
  # prometheus:
  #   image: prom/prometheus:latest
  #   container_name: ielts-bot-prometheus
  #   ports:
  #     - "9090:9090"
  #   volumes:
  #     - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
  #     - prometheus_data:/prometheus
  #   command:
  #     - '--config.file=/etc/prometheus/prometheus.yml'
  #     - '--storage.tsdb.path=/prometheus'
  #     - '--web.console.libraries=/etc/prometheus/console_libraries'
  #     - '--web.console.templates=/etc/prometheus/consoles'
  #     - '--storage.tsdb.retention.time=200h'
  #     - '--web.enable-lifecycle'
  #   restart: unless-stopped

  # Optional: Grafana dashboard (uncomment if needed)
  # grafana:
  #   image: grafana/grafana:latest
  #   container_name: ielts-bot-grafana
  #   ports:
  #     - "3000:3000"
  #   environment:
  #     - GF_SECURITY_ADMIN_PASSWORD=admin
  #   volumes:
  #     - grafana_data:/var/lib/grafana
  #     - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
  #     - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
  #   restart: unless-stopped

  # Log aggregation service (optional)
  # loki:
  #   image: grafana/loki:latest
  #   container_name: ielts-bot-loki
  #   ports:
  #     - "3100:3100"
  #   volumes:
  #     - ./monitoring/loki-config.yml:/etc/loki/local-config.yaml
  #     - loki_data:/loki
  #   command: -config.file=/etc/loki/local-config.yaml
  #   restart: unless-stopped

# Volumes for monitoring data persistence
volumes:
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  loki_data:
    driver: local

# Networks for monitoring
networks:
  monitoring:
    driver: bridge
    labels:
      - "monitoring.network=true"